import React, { useState, useEffect } from 'react';
import { MapContainer, TileLayer, Polygon,GeoJSON } from 'react-leaflet';
import 'leaflet/dist/leaflet.css';
import geojsonData from './Area__Code__Boundaries.json';

function App() {
  /*
  const locationArray = [
    [45.6173, -122.236], [45.6387, -122.6615], [45.6452, -122.3789], [45.66651, -122.56093], [45.7982, -122.6939],
    [45.8081, -122.4816], [45.838, -122.387], [45.942, -122.6723], [46.1933, -123.0548], [46.1933, -123.0548],
    [46.2296, -123.3136], [46.2729, -123.9454], [46.2936, -122.9576], [46.3952, -124.0377], [46.3952, -124.0377],
    [46.4026, -122.9604], [46.4026, -122.9604], [46.4895, -122.8781], [46.532, -122.626], [46.533, -122.147],
    [46.5466, -124.0465], [46.5704, -123.2974], [46.5746, -122.9082], [46.5765, -122.3343], [46.5765, -122.3343],
    [46.587, -123.1101], [46.587, -123.1101], [46.6271, -123.0092], [46.6271, -123.0092], [46.6865, -123.7329],
    [46.7475, -122.9507], [46.7475, -122.9507], [46.7718, -122.0021], [46.8045, -123.1412], [46.8045, -123.1412],
    [46.8841, -123.995], [46.8841, -123.995], [46.8887, -124.0385], [46.9812, -123.6027], [47.0366, -123.272],
    [47.0366, -123.272], [47.0375, -122.1081], [47.0379, -122.9007], [47.0379, -122.9007], [47.1054, -122.0463],
    [47.1054, -123.3976], [47.106, -121.6029], [47.1315, -122.0463], [47.1315, -122.0463], [47.1393, -122.0982],
    [47.1393, -122.0982], [47.2195, -124.1901], [47.2389, -123.2061], [47.2389, -123.2061], [47.3215, -121.9932],
    [47.3215, -121.9932], [47.4059, -123.1393], [47.4059, -123.1393], [47.4341, -122.9259], [47.4341, -122.9259],
    [47.4896, -122.9164], [47.4896, -122.9164], [47.4947, -122.7801], [47.4947, -122.7801], [47.5404, -122.6363],
    [47.5404, -122.6363], [47.5673, -122.6326], [47.5673, -122.6326], [47.6445, -122.6949], [47.6445, -122.6949],
    [47.6493, -121.3316], [47.6493, -121.3316], [47.7537, -122.6123], [47.7537, -122.6123], [47.7948, -124.2643],
    [47.7948, -124.2643], [47.8559, -121.7397], [47.8559, -121.7397], [47.8981, -122.6999], [47.8981, -122.6999],
    [47.9121, -122.5704], [47.9129, -122.0982], [47.9129, -122.0982], [47.9129, -122.0982], [47.9129, -122.0982],
    [48.0354, -122.8145], [48.0354, -122.8145], [48.0511, -121.7424], [48.0511, -121.7424], [48.0518, -122.1771],
    [48.0518, -122.1771], [48.0595, -124.2806], [48.0595, -124.2806], [48.0656, -123.0613], [48.0656, -123.0613],
    [48.1181, -123.4307], [48.1181, -123.4307], [48.13882, -122.28023], [48.13882, -122.28023], [48.1709, -124.5362],
    [48.1855, -122.668], [48.1855, -122.668], [48.1966, -121.5372], [48.2124, -122.2846], [48.2124, -122.2846],
    [48.2932, -122.6432], [48.2932, -122.6432], [48.3681, -124.625], [48.4212, -122.3341], [48.4212, -122.3341],
    [48.4648, -122.6092], [48.4648, -122.6092], [48.4648, -122.6092], [48.52371, -122.91462], [48.5276, -121.4496],
    [48.5323, -122.3184], [48.5323, -122.3184], [48.5372, -123.0679], [48.5372, -123.0679], [48.56, -122.8008],
    [48.5991, -122.1379], [48.5991, -122.1379], [48.7595, -122.4882], [48.7595, -122.4882], [48.8086, -122.0636],
    [48.8645, -122.6307], [48.8645, -122.6307], [48.9001, -122.3057], [48.9001, -122.3057]
  ];

  // Split the array into two parts based on the longitude condition
  const lessThanOrEqualToArray = locationArray.filter(pair => pair[1] <= -122.236);
  const greaterThanArray = locationArray.filter(pair => pair[1] > -122.236);

  // Concatenate the two parts with the greaterThanArray after lessThanOrEqualToArray
  //const orderedLocationArray = [...lessThanOrEqualToArray, ...greaterThanArray];
  greaterThanArray.forEach(element => {
    if (Math.abs(element[0] - lessThanOrEqualToArray[0])>Math.abs(element[0] - lessThanOrEqualToArray[lessThanOrEqualToArray.length-1])){
      lessThanOrEqualToArray.append(element);
    }
    else{
      lessThanOrEqualToArray.unshift(element);
    }
    
  });


 const coordinates = [
    [47.6476, -122.5364],
    [47.76954, -122.39013],
    [47.6062, -122.3321],
    [47.76954, -122.39013],
    [47.6476, -122.5364],
    [47.6062, -122.3321]
]

*/


  return (
    <div className="App">
      <MapContainer
        center={[47.3215, -121.9932]}
        zoom={7}
        scrollWheelZoom={true}
        style={{ height: "100vh", width: "100%" }}
        zoomControl={false}
        minZoom={7}
      >
        <TileLayer
          attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
          url="https://tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey=197c870678314254ae332bcd6f5661d0"
        />
        <GeoJSON data={geojsonData} />
      </MapContainer>
    </div>
  );
}

export default App;
